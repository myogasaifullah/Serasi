name: Deploy Laravel to GitHub Pages

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'
        extensions: mbstring, xml, ctype, json, openssl, tokenizer, curl, gd, fileinfo

    - name: Install Composer dependencies
      run: composer install --no-interaction --prefer-dist --optimize-autoloader

    - name: Install Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install NPM dependencies
      run: npm ci

    - name: Build assets
      run: npm run build

    - name: Create Google credentials directory
      run: mkdir -p storage/app

    - name: Create .env file
      run: |
        cp .env.example .env
        echo "APP_ENV=production" >> .env
        echo "APP_DEBUG=false" >> .env
        echo "APP_URL=https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}" >> .env
        echo "DB_CONNECTION=sheets" >> .env
        echo "GOOGLE_SHEET_ID=${{ secrets.GOOGLE_SHEET_ID }}" >> .env
        echo "GOOGLE_SHEET_NAME=Data Serasi" >> .env

    - name: Generate application key
      run: php artisan key:generate --force

    - name: Create public storage link
      run: php artisan storage:link

    - name: Setup Pages
      uses: actions/configure-pages@v4

    - name: Build static site
      run: |
        # Create a simple index.php that handles routing
        cat > public/index.php << 'EOF'
        <?php

        // Load Laravel
        require __DIR__.'/../vendor/autoload.php';
        $app = require_once __DIR__.'/../bootstrap/app.php';

        // Handle routing
        $kernel = $app->make(Illuminate\Contracts\Http\Kernel::class);
        $response = $kernel->handle(
            $request = Illuminate\Http\Request::capture()
        );

        $response->send();
        $kernel->terminate($request, $response);
        EOF

        # Create .htaccess for URL rewriting
        cat > public/.htaccess << 'EOF'
        <IfModule mod_rewrite.c>
            <IfModule mod_negotiation.c>
                Options -MultiViews -Indexes
            </IfModule>

            RewriteEngine On

            # Handle Authorization Header
            RewriteCond %{HTTP:Authorization} .
            RewriteRule .* - [E=HTTP_AUTHORIZATION:%{HTTP:Authorization}]

            # Redirect Trailing Slashes If Not A Folder...
            RewriteCond %{REQUEST_FILENAME} !-d
            RewriteCond %{REQUEST_URI} (.+)/$
            RewriteRule ^ %1 [L,R=301]

            # Send Requests To Front Controller...
            RewriteCond %{REQUEST_FILENAME} !-d
            RewriteCond %{REQUEST_FILENAME} !-f
            RewriteRule ^ index.php [L]
        </IfModule>
        EOF

    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: ./public

    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4
      if: github.ref == 'refs/heads/main'

  cleanup:
    runs-on: ubuntu-latest
    if: always()
    steps:
    - name: Cleanup
      run: echo "Cleaning up build artifacts"
